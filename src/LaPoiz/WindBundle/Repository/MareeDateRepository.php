<?php

namespace LaPoiz\WindBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MareeDateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MareeDateRepository extends EntityRepository
{
    public function findLast()
    {
        $queryBuilder = $this->createQueryBuilder('mareeDate');
        $queryBuilder
                ->select('mareeDate')
                ->addOrderBy('mareeDate.datePrev', 'DESC')
                ->setMaxResults(1);
        try {
            return $queryBuilder->getQuery()->getOneOrNullResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findLastPrev($number)
    {
        $queryBuilder = $this->createQueryBuilder('mareeDate');
        $queryBuilder
            ->select('mareeDate')
            ->addOrderBy('mareeDate.datePrev', 'ASC')
            ->setMaxResults($number);
        try {
            return $queryBuilder->getQuery()->getArrayResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }


    // Return future marrÃ©e from today
    // previsionMareeDateList
    public function getFuturMaree()
    {
        $queryBuilder = $this->createQueryBuilder('mareeDate');
        $queryBuilder
            ->select('mareeDate')
            ->where("mareeDate.datePrev >= :datecourant")
                ->setParameter('datecourant', new \Datetime(date('d-m-Y')))
            ->addOrderBy('mareeDate.datePrev', 'ASC');
        //$queryBuilder->expr()->gte("mareeDate.datePrev", ":currentDate");
        //$queryBuilder->setParameter('currentDate', new \DateTime());

        try {
            return $queryBuilder->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
